[mqtt_input]
# Broker can be host:port or tcp://host:port (1883 default TCP)
broker = test.mosquitto.org:1883
username = 
password = 
qos = 1
client_id = lora-parser-in
#lora_input_topic = chirpstack_dush/application/+/device/+/event/up
lora_input_topic = chirpstack_dush/#
retain = false

[mqtt_output]
# Broker can be host:port or tcp://host:port
broker = test.mosquitto.org:1883
username = 
password = 
qos = 1
client_id = lora-parser-out
lora_output_topic = aloxy/parsed
retain = false

[aloxy]
base_url = https://aloxy.example.com/api
method = POST
payload_field = payload
# HTTP client timeout in seconds
timeout_seconds = 15
# auth_type: none | bearer | header
auth_type = none
auth_token = 
# used only when auth_type=header
auth_header_key = X-API-Key
# Mocking options for testing Aloxy failures without real calls
mock_enabled = true
# Provide either a file path or inline JSON
mock_file = configs/aloxy-mock.json
mock_json = 

[lora_write_output]
# Second aggregated output topic (uses same broker/credentials as [mqtt_output])
lora_write_topic = aloxy/write
qos = 1
retain = false

[logging]
file = logs/app.log
level = info
max_size_mb = 10
max_backups = 5
max_age_days = 7

[sensors]
# path to the JSON file containing devEUI->sensor name mapping
map_file = configs/sensors.json
